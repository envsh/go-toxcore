package tox
/*
#include "tox/tox.h"
*/
import "C"
import "errors"

type ErrorGroup string
type ErrorCode int 

const (
	TOX_ERR_OPTIONS_NEW = ErrorGroup("TOX_ERR_OPTIONS_NEW")
	TOX_ERR_NEW = ErrorGroup("TOX_ERR_NEW")
	TOX_ERR_BOOTSTRAP = ErrorGroup("TOX_ERR_BOOTSTRAP")
	TOX_ERR_SET_INFO = ErrorGroup("TOX_ERR_SET_INFO")
	TOX_ERR_FRIEND_ADD = ErrorGroup("TOX_ERR_FRIEND_ADD")
	TOX_ERR_FRIEND_DELETE = ErrorGroup("TOX_ERR_FRIEND_DELETE")
	TOX_ERR_FRIEND_BY_PUBLIC_KEY = ErrorGroup("TOX_ERR_FRIEND_BY_PUBLIC_KEY")
	TOX_ERR_FRIEND_GET_PUBLIC_KEY = ErrorGroup("TOX_ERR_FRIEND_GET_PUBLIC_KEY")
	TOX_ERR_FRIEND_GET_LAST_ONLINE = ErrorGroup("TOX_ERR_FRIEND_GET_LAST_ONLINE")
	TOX_ERR_FRIEND_QUERY = ErrorGroup("TOX_ERR_FRIEND_QUERY")
	TOX_ERR_SET_TYPING = ErrorGroup("TOX_ERR_SET_TYPING")
	TOX_ERR_FRIEND_SEND_MESSAGE = ErrorGroup("TOX_ERR_FRIEND_SEND_MESSAGE")
	TOX_ERR_FILE_CONTROL = ErrorGroup("TOX_ERR_FILE_CONTROL")
	TOX_ERR_FILE_SEEK = ErrorGroup("TOX_ERR_FILE_SEEK")
	TOX_ERR_FILE_GET = ErrorGroup("TOX_ERR_FILE_GET")
	TOX_ERR_FILE_SEND = ErrorGroup("TOX_ERR_FILE_SEND")
	TOX_ERR_FILE_SEND_CHUNK = ErrorGroup("TOX_ERR_FILE_SEND_CHUNK")
	TOX_ERR_CONFERENCE_NEW = ErrorGroup("TOX_ERR_CONFERENCE_NEW")
	TOX_ERR_CONFERENCE_DELETE = ErrorGroup("TOX_ERR_CONFERENCE_DELETE")
	TOX_ERR_CONFERENCE_PEER_QUERY = ErrorGroup("TOX_ERR_CONFERENCE_PEER_QUERY")
	TOX_ERR_CONFERENCE_INVITE = ErrorGroup("TOX_ERR_CONFERENCE_INVITE")
	TOX_ERR_CONFERENCE_JOIN = ErrorGroup("TOX_ERR_CONFERENCE_JOIN")
	TOX_ERR_CONFERENCE_SEND_MESSAGE = ErrorGroup("TOX_ERR_CONFERENCE_SEND_MESSAGE")
	TOX_ERR_CONFERENCE_TITLE = ErrorGroup("TOX_ERR_CONFERENCE_TITLE")
	TOX_ERR_CONFERENCE_GET_TYPE = ErrorGroup("TOX_ERR_CONFERENCE_GET_TYPE")
	TOX_ERR_FRIEND_CUSTOM_PACKET = ErrorGroup("TOX_ERR_FRIEND_CUSTOM_PACKET")
	TOX_ERR_GET_PORT = ErrorGroup("TOX_ERR_GET_PORT")
)

const (
	TOX_ERR_OPTIONS_NEW_OK = ErrorCode(C.TOX_ERR_OPTIONS_NEW_OK)
	TOX_ERR_OPTIONS_NEW_MALLOC = ErrorCode(C.TOX_ERR_OPTIONS_NEW_MALLOC)
	TOX_ERR_NEW_OK = ErrorCode(C.TOX_ERR_NEW_OK)
	TOX_ERR_NEW_NULL = ErrorCode(C.TOX_ERR_NEW_NULL)
	TOX_ERR_NEW_MALLOC = ErrorCode(C.TOX_ERR_NEW_MALLOC)
	TOX_ERR_NEW_PORT_ALLOC = ErrorCode(C.TOX_ERR_NEW_PORT_ALLOC)
	TOX_ERR_NEW_PROXY_BAD_TYPE = ErrorCode(C.TOX_ERR_NEW_PROXY_BAD_TYPE)
	TOX_ERR_NEW_PROXY_BAD_HOST = ErrorCode(C.TOX_ERR_NEW_PROXY_BAD_HOST)
	TOX_ERR_NEW_PROXY_BAD_PORT = ErrorCode(C.TOX_ERR_NEW_PROXY_BAD_PORT)
	TOX_ERR_NEW_PROXY_NOT_FOUND = ErrorCode(C.TOX_ERR_NEW_PROXY_NOT_FOUND)
	TOX_ERR_NEW_LOAD_ENCRYPTED = ErrorCode(C.TOX_ERR_NEW_LOAD_ENCRYPTED)
	TOX_ERR_NEW_LOAD_BAD_FORMAT = ErrorCode(C.TOX_ERR_NEW_LOAD_BAD_FORMAT)
	TOX_ERR_BOOTSTRAP_OK = ErrorCode(C.TOX_ERR_BOOTSTRAP_OK)
	TOX_ERR_BOOTSTRAP_NULL = ErrorCode(C.TOX_ERR_BOOTSTRAP_NULL)
	TOX_ERR_BOOTSTRAP_BAD_HOST = ErrorCode(C.TOX_ERR_BOOTSTRAP_BAD_HOST)
	TOX_ERR_BOOTSTRAP_BAD_PORT = ErrorCode(C.TOX_ERR_BOOTSTRAP_BAD_PORT)
	TOX_ERR_SET_INFO_OK = ErrorCode(C.TOX_ERR_SET_INFO_OK)
	TOX_ERR_SET_INFO_NULL = ErrorCode(C.TOX_ERR_SET_INFO_NULL)
	TOX_ERR_SET_INFO_TOO_LONG = ErrorCode(C.TOX_ERR_SET_INFO_TOO_LONG)
	TOX_ERR_FRIEND_ADD_OK = ErrorCode(C.TOX_ERR_FRIEND_ADD_OK)
	TOX_ERR_FRIEND_ADD_NULL = ErrorCode(C.TOX_ERR_FRIEND_ADD_NULL)
	TOX_ERR_FRIEND_ADD_TOO_LONG = ErrorCode(C.TOX_ERR_FRIEND_ADD_TOO_LONG)
	TOX_ERR_FRIEND_ADD_NO_MESSAGE = ErrorCode(C.TOX_ERR_FRIEND_ADD_NO_MESSAGE)
	TOX_ERR_FRIEND_ADD_OWN_KEY = ErrorCode(C.TOX_ERR_FRIEND_ADD_OWN_KEY)
	TOX_ERR_FRIEND_ADD_ALREADY_SENT = ErrorCode(C.TOX_ERR_FRIEND_ADD_ALREADY_SENT)
	TOX_ERR_FRIEND_ADD_BAD_CHECKSUM = ErrorCode(C.TOX_ERR_FRIEND_ADD_BAD_CHECKSUM)
	TOX_ERR_FRIEND_ADD_SET_NEW_NOSPAM = ErrorCode(C.TOX_ERR_FRIEND_ADD_SET_NEW_NOSPAM)
	TOX_ERR_FRIEND_ADD_MALLOC = ErrorCode(C.TOX_ERR_FRIEND_ADD_MALLOC)
	TOX_ERR_FRIEND_DELETE_OK = ErrorCode(C.TOX_ERR_FRIEND_DELETE_OK)
	TOX_ERR_FRIEND_DELETE_FRIEND_NOT_FOUND = ErrorCode(C.TOX_ERR_FRIEND_DELETE_FRIEND_NOT_FOUND)
	TOX_ERR_FRIEND_BY_PUBLIC_KEY_OK = ErrorCode(C.TOX_ERR_FRIEND_BY_PUBLIC_KEY_OK)
	TOX_ERR_FRIEND_BY_PUBLIC_KEY_NULL = ErrorCode(C.TOX_ERR_FRIEND_BY_PUBLIC_KEY_NULL)
	TOX_ERR_FRIEND_BY_PUBLIC_KEY_NOT_FOUND = ErrorCode(C.TOX_ERR_FRIEND_BY_PUBLIC_KEY_NOT_FOUND)
	TOX_ERR_FRIEND_GET_PUBLIC_KEY_OK = ErrorCode(C.TOX_ERR_FRIEND_GET_PUBLIC_KEY_OK)
	TOX_ERR_FRIEND_GET_PUBLIC_KEY_FRIEND_NOT_FOUND = ErrorCode(C.TOX_ERR_FRIEND_GET_PUBLIC_KEY_FRIEND_NOT_FOUND)
	TOX_ERR_FRIEND_GET_LAST_ONLINE_OK = ErrorCode(C.TOX_ERR_FRIEND_GET_LAST_ONLINE_OK)
	TOX_ERR_FRIEND_GET_LAST_ONLINE_FRIEND_NOT_FOUND = ErrorCode(C.TOX_ERR_FRIEND_GET_LAST_ONLINE_FRIEND_NOT_FOUND)
	TOX_ERR_FRIEND_QUERY_OK = ErrorCode(C.TOX_ERR_FRIEND_QUERY_OK)
	TOX_ERR_FRIEND_QUERY_NULL = ErrorCode(C.TOX_ERR_FRIEND_QUERY_NULL)
	TOX_ERR_FRIEND_QUERY_FRIEND_NOT_FOUND = ErrorCode(C.TOX_ERR_FRIEND_QUERY_FRIEND_NOT_FOUND)
	TOX_ERR_SET_TYPING_OK = ErrorCode(C.TOX_ERR_SET_TYPING_OK)
	TOX_ERR_SET_TYPING_FRIEND_NOT_FOUND = ErrorCode(C.TOX_ERR_SET_TYPING_FRIEND_NOT_FOUND)
	TOX_ERR_FRIEND_SEND_MESSAGE_OK = ErrorCode(C.TOX_ERR_FRIEND_SEND_MESSAGE_OK)
	TOX_ERR_FRIEND_SEND_MESSAGE_NULL = ErrorCode(C.TOX_ERR_FRIEND_SEND_MESSAGE_NULL)
	TOX_ERR_FRIEND_SEND_MESSAGE_FRIEND_NOT_FOUND = ErrorCode(C.TOX_ERR_FRIEND_SEND_MESSAGE_FRIEND_NOT_FOUND)
	TOX_ERR_FRIEND_SEND_MESSAGE_FRIEND_NOT_CONNECTED = ErrorCode(C.TOX_ERR_FRIEND_SEND_MESSAGE_FRIEND_NOT_CONNECTED)
	TOX_ERR_FRIEND_SEND_MESSAGE_SENDQ = ErrorCode(C.TOX_ERR_FRIEND_SEND_MESSAGE_SENDQ)
	TOX_ERR_FRIEND_SEND_MESSAGE_TOO_LONG = ErrorCode(C.TOX_ERR_FRIEND_SEND_MESSAGE_TOO_LONG)
	TOX_ERR_FRIEND_SEND_MESSAGE_EMPTY = ErrorCode(C.TOX_ERR_FRIEND_SEND_MESSAGE_EMPTY)
	TOX_ERR_FILE_CONTROL_OK = ErrorCode(C.TOX_ERR_FILE_CONTROL_OK)
	TOX_ERR_FILE_CONTROL_FRIEND_NOT_FOUND = ErrorCode(C.TOX_ERR_FILE_CONTROL_FRIEND_NOT_FOUND)
	TOX_ERR_FILE_CONTROL_FRIEND_NOT_CONNECTED = ErrorCode(C.TOX_ERR_FILE_CONTROL_FRIEND_NOT_CONNECTED)
	TOX_ERR_FILE_CONTROL_NOT_FOUND = ErrorCode(C.TOX_ERR_FILE_CONTROL_NOT_FOUND)
	TOX_ERR_FILE_CONTROL_NOT_PAUSED = ErrorCode(C.TOX_ERR_FILE_CONTROL_NOT_PAUSED)
	TOX_ERR_FILE_CONTROL_DENIED = ErrorCode(C.TOX_ERR_FILE_CONTROL_DENIED)
	TOX_ERR_FILE_CONTROL_ALREADY_PAUSED = ErrorCode(C.TOX_ERR_FILE_CONTROL_ALREADY_PAUSED)
	TOX_ERR_FILE_CONTROL_SENDQ = ErrorCode(C.TOX_ERR_FILE_CONTROL_SENDQ)
	TOX_ERR_FILE_SEEK_OK = ErrorCode(C.TOX_ERR_FILE_SEEK_OK)
	TOX_ERR_FILE_SEEK_FRIEND_NOT_FOUND = ErrorCode(C.TOX_ERR_FILE_SEEK_FRIEND_NOT_FOUND)
	TOX_ERR_FILE_SEEK_FRIEND_NOT_CONNECTED = ErrorCode(C.TOX_ERR_FILE_SEEK_FRIEND_NOT_CONNECTED)
	TOX_ERR_FILE_SEEK_NOT_FOUND = ErrorCode(C.TOX_ERR_FILE_SEEK_NOT_FOUND)
	TOX_ERR_FILE_SEEK_DENIED = ErrorCode(C.TOX_ERR_FILE_SEEK_DENIED)
	TOX_ERR_FILE_SEEK_INVALID_POSITION = ErrorCode(C.TOX_ERR_FILE_SEEK_INVALID_POSITION)
	TOX_ERR_FILE_SEEK_SENDQ = ErrorCode(C.TOX_ERR_FILE_SEEK_SENDQ)
	TOX_ERR_FILE_GET_OK = ErrorCode(C.TOX_ERR_FILE_GET_OK)
	TOX_ERR_FILE_GET_NULL = ErrorCode(C.TOX_ERR_FILE_GET_NULL)
	TOX_ERR_FILE_GET_FRIEND_NOT_FOUND = ErrorCode(C.TOX_ERR_FILE_GET_FRIEND_NOT_FOUND)
	TOX_ERR_FILE_GET_NOT_FOUND = ErrorCode(C.TOX_ERR_FILE_GET_NOT_FOUND)
	TOX_ERR_FILE_SEND_OK = ErrorCode(C.TOX_ERR_FILE_SEND_OK)
	TOX_ERR_FILE_SEND_NULL = ErrorCode(C.TOX_ERR_FILE_SEND_NULL)
	TOX_ERR_FILE_SEND_FRIEND_NOT_FOUND = ErrorCode(C.TOX_ERR_FILE_SEND_FRIEND_NOT_FOUND)
	TOX_ERR_FILE_SEND_FRIEND_NOT_CONNECTED = ErrorCode(C.TOX_ERR_FILE_SEND_FRIEND_NOT_CONNECTED)
	TOX_ERR_FILE_SEND_NAME_TOO_LONG = ErrorCode(C.TOX_ERR_FILE_SEND_NAME_TOO_LONG)
	TOX_ERR_FILE_SEND_TOO_MANY = ErrorCode(C.TOX_ERR_FILE_SEND_TOO_MANY)
	TOX_ERR_FILE_SEND_CHUNK_OK = ErrorCode(C.TOX_ERR_FILE_SEND_CHUNK_OK)
	TOX_ERR_FILE_SEND_CHUNK_NULL = ErrorCode(C.TOX_ERR_FILE_SEND_CHUNK_NULL)
	TOX_ERR_FILE_SEND_CHUNK_FRIEND_NOT_FOUND = ErrorCode(C.TOX_ERR_FILE_SEND_CHUNK_FRIEND_NOT_FOUND)
	TOX_ERR_FILE_SEND_CHUNK_FRIEND_NOT_CONNECTED = ErrorCode(C.TOX_ERR_FILE_SEND_CHUNK_FRIEND_NOT_CONNECTED)
	TOX_ERR_FILE_SEND_CHUNK_NOT_FOUND = ErrorCode(C.TOX_ERR_FILE_SEND_CHUNK_NOT_FOUND)
	TOX_ERR_FILE_SEND_CHUNK_NOT_TRANSFERRING = ErrorCode(C.TOX_ERR_FILE_SEND_CHUNK_NOT_TRANSFERRING)
	TOX_ERR_FILE_SEND_CHUNK_INVALID_LENGTH = ErrorCode(C.TOX_ERR_FILE_SEND_CHUNK_INVALID_LENGTH)
	TOX_ERR_FILE_SEND_CHUNK_SENDQ = ErrorCode(C.TOX_ERR_FILE_SEND_CHUNK_SENDQ)
	TOX_ERR_FILE_SEND_CHUNK_WRONG_POSITION = ErrorCode(C.TOX_ERR_FILE_SEND_CHUNK_WRONG_POSITION)
	TOX_ERR_CONFERENCE_NEW_OK = ErrorCode(C.TOX_ERR_CONFERENCE_NEW_OK)
	TOX_ERR_CONFERENCE_NEW_INIT = ErrorCode(C.TOX_ERR_CONFERENCE_NEW_INIT)
	TOX_ERR_CONFERENCE_DELETE_OK = ErrorCode(C.TOX_ERR_CONFERENCE_DELETE_OK)
	TOX_ERR_CONFERENCE_DELETE_CONFERENCE_NOT_FOUND = ErrorCode(C.TOX_ERR_CONFERENCE_DELETE_CONFERENCE_NOT_FOUND)
	TOX_ERR_CONFERENCE_PEER_QUERY_OK = ErrorCode(C.TOX_ERR_CONFERENCE_PEER_QUERY_OK)
	TOX_ERR_CONFERENCE_PEER_QUERY_CONFERENCE_NOT_FOUND = ErrorCode(C.TOX_ERR_CONFERENCE_PEER_QUERY_CONFERENCE_NOT_FOUND)
	TOX_ERR_CONFERENCE_PEER_QUERY_PEER_NOT_FOUND = ErrorCode(C.TOX_ERR_CONFERENCE_PEER_QUERY_PEER_NOT_FOUND)
	TOX_ERR_CONFERENCE_PEER_QUERY_NO_CONNECTION = ErrorCode(C.TOX_ERR_CONFERENCE_PEER_QUERY_NO_CONNECTION)
	TOX_ERR_CONFERENCE_INVITE_OK = ErrorCode(C.TOX_ERR_CONFERENCE_INVITE_OK)
	TOX_ERR_CONFERENCE_INVITE_CONFERENCE_NOT_FOUND = ErrorCode(C.TOX_ERR_CONFERENCE_INVITE_CONFERENCE_NOT_FOUND)
	TOX_ERR_CONFERENCE_INVITE_FAIL_SEND = ErrorCode(C.TOX_ERR_CONFERENCE_INVITE_FAIL_SEND)
	TOX_ERR_CONFERENCE_JOIN_OK = ErrorCode(C.TOX_ERR_CONFERENCE_JOIN_OK)
	TOX_ERR_CONFERENCE_JOIN_INVALID_LENGTH = ErrorCode(C.TOX_ERR_CONFERENCE_JOIN_INVALID_LENGTH)
	TOX_ERR_CONFERENCE_JOIN_WRONG_TYPE = ErrorCode(C.TOX_ERR_CONFERENCE_JOIN_WRONG_TYPE)
	TOX_ERR_CONFERENCE_JOIN_FRIEND_NOT_FOUND = ErrorCode(C.TOX_ERR_CONFERENCE_JOIN_FRIEND_NOT_FOUND)
	TOX_ERR_CONFERENCE_JOIN_DUPLICATE = ErrorCode(C.TOX_ERR_CONFERENCE_JOIN_DUPLICATE)
	TOX_ERR_CONFERENCE_JOIN_INIT_FAIL = ErrorCode(C.TOX_ERR_CONFERENCE_JOIN_INIT_FAIL)
	TOX_ERR_CONFERENCE_JOIN_FAIL_SEND = ErrorCode(C.TOX_ERR_CONFERENCE_JOIN_FAIL_SEND)
	TOX_ERR_CONFERENCE_SEND_MESSAGE_OK = ErrorCode(C.TOX_ERR_CONFERENCE_SEND_MESSAGE_OK)
	TOX_ERR_CONFERENCE_SEND_MESSAGE_CONFERENCE_NOT_FOUND = ErrorCode(C.TOX_ERR_CONFERENCE_SEND_MESSAGE_CONFERENCE_NOT_FOUND)
	TOX_ERR_CONFERENCE_SEND_MESSAGE_TOO_LONG = ErrorCode(C.TOX_ERR_CONFERENCE_SEND_MESSAGE_TOO_LONG)
	TOX_ERR_CONFERENCE_SEND_MESSAGE_NO_CONNECTION = ErrorCode(C.TOX_ERR_CONFERENCE_SEND_MESSAGE_NO_CONNECTION)
	TOX_ERR_CONFERENCE_SEND_MESSAGE_FAIL_SEND = ErrorCode(C.TOX_ERR_CONFERENCE_SEND_MESSAGE_FAIL_SEND)
	TOX_ERR_CONFERENCE_TITLE_OK = ErrorCode(C.TOX_ERR_CONFERENCE_TITLE_OK)
	TOX_ERR_CONFERENCE_TITLE_CONFERENCE_NOT_FOUND = ErrorCode(C.TOX_ERR_CONFERENCE_TITLE_CONFERENCE_NOT_FOUND)
	TOX_ERR_CONFERENCE_TITLE_INVALID_LENGTH = ErrorCode(C.TOX_ERR_CONFERENCE_TITLE_INVALID_LENGTH)
	TOX_ERR_CONFERENCE_TITLE_FAIL_SEND = ErrorCode(C.TOX_ERR_CONFERENCE_TITLE_FAIL_SEND)
	TOX_ERR_CONFERENCE_GET_TYPE_OK = ErrorCode(C.TOX_ERR_CONFERENCE_GET_TYPE_OK)
	TOX_ERR_CONFERENCE_GET_TYPE_CONFERENCE_NOT_FOUND = ErrorCode(C.TOX_ERR_CONFERENCE_GET_TYPE_CONFERENCE_NOT_FOUND)
	TOX_ERR_FRIEND_CUSTOM_PACKET_OK = ErrorCode(C.TOX_ERR_FRIEND_CUSTOM_PACKET_OK)
	TOX_ERR_FRIEND_CUSTOM_PACKET_NULL = ErrorCode(C.TOX_ERR_FRIEND_CUSTOM_PACKET_NULL)
	TOX_ERR_FRIEND_CUSTOM_PACKET_FRIEND_NOT_FOUND = ErrorCode(C.TOX_ERR_FRIEND_CUSTOM_PACKET_FRIEND_NOT_FOUND)
	TOX_ERR_FRIEND_CUSTOM_PACKET_FRIEND_NOT_CONNECTED = ErrorCode(C.TOX_ERR_FRIEND_CUSTOM_PACKET_FRIEND_NOT_CONNECTED)
	TOX_ERR_FRIEND_CUSTOM_PACKET_INVALID = ErrorCode(C.TOX_ERR_FRIEND_CUSTOM_PACKET_INVALID)
	TOX_ERR_FRIEND_CUSTOM_PACKET_EMPTY = ErrorCode(C.TOX_ERR_FRIEND_CUSTOM_PACKET_EMPTY)
	TOX_ERR_FRIEND_CUSTOM_PACKET_TOO_LONG = ErrorCode(C.TOX_ERR_FRIEND_CUSTOM_PACKET_TOO_LONG)
	TOX_ERR_FRIEND_CUSTOM_PACKET_SENDQ = ErrorCode(C.TOX_ERR_FRIEND_CUSTOM_PACKET_SENDQ)
	TOX_ERR_GET_PORT_OK = ErrorCode(C.TOX_ERR_GET_PORT_OK)
	TOX_ERR_GET_PORT_NOT_BOUND = ErrorCode(C.TOX_ERR_GET_PORT_NOT_BOUND)
)

type errorHolder map[ErrorGroup]map[ErrorCode]error 

// ParseError returns go-style tox error
func ParseError(group ErrorGroup, code ErrorCode) error {
	return toxErrors[group][code]
}

var toxErrors errorHolder 

func init(){
	toxErrors = make(errorHolder)

	toxErrors[TOX_ERR_OPTIONS_NEW] = make(map[ErrorCode]error)
	toxErrors[TOX_ERR_NEW] = make(map[ErrorCode]error)
	toxErrors[TOX_ERR_BOOTSTRAP] = make(map[ErrorCode]error)
	toxErrors[TOX_ERR_SET_INFO] = make(map[ErrorCode]error)
	toxErrors[TOX_ERR_FRIEND_ADD] = make(map[ErrorCode]error)
	toxErrors[TOX_ERR_FRIEND_DELETE] = make(map[ErrorCode]error)
	toxErrors[TOX_ERR_FRIEND_BY_PUBLIC_KEY] = make(map[ErrorCode]error)
	toxErrors[TOX_ERR_FRIEND_GET_PUBLIC_KEY] = make(map[ErrorCode]error)
	toxErrors[TOX_ERR_FRIEND_GET_LAST_ONLINE] = make(map[ErrorCode]error)
	toxErrors[TOX_ERR_FRIEND_QUERY] = make(map[ErrorCode]error)
	toxErrors[TOX_ERR_SET_TYPING] = make(map[ErrorCode]error)
	toxErrors[TOX_ERR_FRIEND_SEND_MESSAGE] = make(map[ErrorCode]error)
	toxErrors[TOX_ERR_FILE_CONTROL] = make(map[ErrorCode]error)
	toxErrors[TOX_ERR_FILE_SEEK] = make(map[ErrorCode]error)
	toxErrors[TOX_ERR_FILE_GET] = make(map[ErrorCode]error)
	toxErrors[TOX_ERR_FILE_SEND] = make(map[ErrorCode]error)
	toxErrors[TOX_ERR_FILE_SEND_CHUNK] = make(map[ErrorCode]error)
	toxErrors[TOX_ERR_CONFERENCE_NEW] = make(map[ErrorCode]error)
	toxErrors[TOX_ERR_CONFERENCE_DELETE] = make(map[ErrorCode]error)
	toxErrors[TOX_ERR_CONFERENCE_PEER_QUERY] = make(map[ErrorCode]error)
	toxErrors[TOX_ERR_CONFERENCE_INVITE] = make(map[ErrorCode]error)
	toxErrors[TOX_ERR_CONFERENCE_JOIN] = make(map[ErrorCode]error)
	toxErrors[TOX_ERR_CONFERENCE_SEND_MESSAGE] = make(map[ErrorCode]error)
	toxErrors[TOX_ERR_CONFERENCE_TITLE] = make(map[ErrorCode]error)
	toxErrors[TOX_ERR_CONFERENCE_GET_TYPE] = make(map[ErrorCode]error)
	toxErrors[TOX_ERR_FRIEND_CUSTOM_PACKET] = make(map[ErrorCode]error)
	toxErrors[TOX_ERR_GET_PORT] = make(map[ErrorCode]error)

	toxErrors[TOX_ERR_OPTIONS_NEW][TOX_ERR_OPTIONS_NEW_OK] = nil // The function returned successfully.
	toxErrors[TOX_ERR_OPTIONS_NEW][TOX_ERR_OPTIONS_NEW_MALLOC] = errors.New("The function failed to allocate enough memory for the options struct.")
	toxErrors[TOX_ERR_NEW][TOX_ERR_NEW_OK] = nil // The function returned successfully.
	toxErrors[TOX_ERR_NEW][TOX_ERR_NEW_NULL] = errors.New("One of the arguments to the function was NULL when it was not expected.")
	toxErrors[TOX_ERR_NEW][TOX_ERR_NEW_MALLOC] = errors.New("The function was unable to allocate enough memory to store the internal structures for the Tox object.")
	toxErrors[TOX_ERR_NEW][TOX_ERR_NEW_PORT_ALLOC] = errors.New("The function was unable to bind to a port. This may mean that all ports have already been bound, e.g. by other Tox instances, or it may mean a permission error. You may be able to gather more information from errno.")
	toxErrors[TOX_ERR_NEW][TOX_ERR_NEW_PROXY_BAD_TYPE] = errors.New("proxy_type was invalid.")
	toxErrors[TOX_ERR_NEW][TOX_ERR_NEW_PROXY_BAD_HOST] = errors.New("proxy_type was valid but the proxy_host passed had an invalid format or was NULL.")
	toxErrors[TOX_ERR_NEW][TOX_ERR_NEW_PROXY_BAD_PORT] = errors.New("proxy_type was valid, but the proxy_port was invalid.")
	toxErrors[TOX_ERR_NEW][TOX_ERR_NEW_PROXY_NOT_FOUND] = errors.New("The proxy address passed could not be resolved.")
	toxErrors[TOX_ERR_NEW][TOX_ERR_NEW_LOAD_ENCRYPTED] = errors.New("The byte array to be loaded contained an encrypted save.")
	toxErrors[TOX_ERR_NEW][TOX_ERR_NEW_LOAD_BAD_FORMAT] = errors.New("The data format was invalid. This can happen when loading data that was saved by an older version of Tox, or when the data has been corrupted. When loading from badly formatted data, some data may have been loaded, and the rest is discarded. Passing an invalid length parameter also causes this error.")
	toxErrors[TOX_ERR_BOOTSTRAP][TOX_ERR_BOOTSTRAP_OK] = nil // The function returned successfully.
	toxErrors[TOX_ERR_BOOTSTRAP][TOX_ERR_BOOTSTRAP_NULL] = errors.New("One of the arguments to the function was NULL when it was not expected.")
	toxErrors[TOX_ERR_BOOTSTRAP][TOX_ERR_BOOTSTRAP_BAD_HOST] = errors.New("The address could not be resolved to an IP address, or the IP address passed was invalid.")
	toxErrors[TOX_ERR_BOOTSTRAP][TOX_ERR_BOOTSTRAP_BAD_PORT] = errors.New("The port passed was invalid. The valid port range is (1, 65535).")
	toxErrors[TOX_ERR_SET_INFO][TOX_ERR_SET_INFO_OK] = nil // The function returned successfully.
	toxErrors[TOX_ERR_SET_INFO][TOX_ERR_SET_INFO_NULL] = errors.New("One of the arguments to the function was NULL when it was not expected.")
	toxErrors[TOX_ERR_SET_INFO][TOX_ERR_SET_INFO_TOO_LONG] = errors.New("Information length exceeded maximum permissible size.")
	toxErrors[TOX_ERR_FRIEND_ADD][TOX_ERR_FRIEND_ADD_OK] = nil // The function returned successfully.
	toxErrors[TOX_ERR_FRIEND_ADD][TOX_ERR_FRIEND_ADD_NULL] = errors.New("One of the arguments to the function was NULL when it was not expected.")
	toxErrors[TOX_ERR_FRIEND_ADD][TOX_ERR_FRIEND_ADD_TOO_LONG] = errors.New("The length of the friend request message exceeded TOX_MAX_FRIEND_REQUEST_LENGTH.")
	toxErrors[TOX_ERR_FRIEND_ADD][TOX_ERR_FRIEND_ADD_NO_MESSAGE] = errors.New("The friend request message was empty. This, and the TOO_LONG code will never be returned from tox_friend_add_norequest.")
	toxErrors[TOX_ERR_FRIEND_ADD][TOX_ERR_FRIEND_ADD_OWN_KEY] = errors.New("The friend address belongs to the sending client.")
	toxErrors[TOX_ERR_FRIEND_ADD][TOX_ERR_FRIEND_ADD_ALREADY_SENT] = errors.New("A friend request has already been sent, or the address belongs to a friend that is already on the friend list.")
	toxErrors[TOX_ERR_FRIEND_ADD][TOX_ERR_FRIEND_ADD_BAD_CHECKSUM] = errors.New("The friend address checksum failed.")
	toxErrors[TOX_ERR_FRIEND_ADD][TOX_ERR_FRIEND_ADD_SET_NEW_NOSPAM] = errors.New("The friend was already there, but the nospam value was different.")
	toxErrors[TOX_ERR_FRIEND_ADD][TOX_ERR_FRIEND_ADD_MALLOC] = errors.New("A memory allocation failed when trying to increase the friend list size.")
	toxErrors[TOX_ERR_FRIEND_DELETE][TOX_ERR_FRIEND_DELETE_OK] = nil // The function returned successfully.
	toxErrors[TOX_ERR_FRIEND_DELETE][TOX_ERR_FRIEND_DELETE_FRIEND_NOT_FOUND] = errors.New("There was no friend with the given friend number. No friends were deleted.")
	toxErrors[TOX_ERR_FRIEND_BY_PUBLIC_KEY][TOX_ERR_FRIEND_BY_PUBLIC_KEY_OK] = nil // The function returned successfully.
	toxErrors[TOX_ERR_FRIEND_BY_PUBLIC_KEY][TOX_ERR_FRIEND_BY_PUBLIC_KEY_NULL] = errors.New("One of the arguments to the function was NULL when it was not expected.")
	toxErrors[TOX_ERR_FRIEND_BY_PUBLIC_KEY][TOX_ERR_FRIEND_BY_PUBLIC_KEY_NOT_FOUND] = errors.New("No friend with the given Public Key exists on the friend list.")
	toxErrors[TOX_ERR_FRIEND_GET_PUBLIC_KEY][TOX_ERR_FRIEND_GET_PUBLIC_KEY_OK] = nil // The function returned successfully.
	toxErrors[TOX_ERR_FRIEND_GET_PUBLIC_KEY][TOX_ERR_FRIEND_GET_PUBLIC_KEY_FRIEND_NOT_FOUND] = errors.New("No friend with the given number exists on the friend list.")
	toxErrors[TOX_ERR_FRIEND_GET_LAST_ONLINE][TOX_ERR_FRIEND_GET_LAST_ONLINE_OK] = nil // The function returned successfully.
	toxErrors[TOX_ERR_FRIEND_GET_LAST_ONLINE][TOX_ERR_FRIEND_GET_LAST_ONLINE_FRIEND_NOT_FOUND] = errors.New("No friend with the given number exists on the friend list.")
	toxErrors[TOX_ERR_FRIEND_QUERY][TOX_ERR_FRIEND_QUERY_OK] = nil // The function returned successfully.
	toxErrors[TOX_ERR_FRIEND_QUERY][TOX_ERR_FRIEND_QUERY_NULL] = errors.New("The pointer parameter for storing the query result (name, message) was NULL. Unlike the `_self_` variants of these functions, which have no effect when a parameter is NULL, these functions return an error in that case.")
	toxErrors[TOX_ERR_FRIEND_QUERY][TOX_ERR_FRIEND_QUERY_FRIEND_NOT_FOUND] = errors.New("The friend_number did not designate a valid friend.")
	toxErrors[TOX_ERR_SET_TYPING][TOX_ERR_SET_TYPING_OK] = nil // The function returned successfully.
	toxErrors[TOX_ERR_SET_TYPING][TOX_ERR_SET_TYPING_FRIEND_NOT_FOUND] = errors.New("The friend number did not designate a valid friend.")
	toxErrors[TOX_ERR_FRIEND_SEND_MESSAGE][TOX_ERR_FRIEND_SEND_MESSAGE_OK] = nil // The function returned successfully.
	toxErrors[TOX_ERR_FRIEND_SEND_MESSAGE][TOX_ERR_FRIEND_SEND_MESSAGE_NULL] = errors.New("One of the arguments to the function was NULL when it was not expected.")
	toxErrors[TOX_ERR_FRIEND_SEND_MESSAGE][TOX_ERR_FRIEND_SEND_MESSAGE_FRIEND_NOT_FOUND] = errors.New("The friend number did not designate a valid friend.")
	toxErrors[TOX_ERR_FRIEND_SEND_MESSAGE][TOX_ERR_FRIEND_SEND_MESSAGE_FRIEND_NOT_CONNECTED] = errors.New("This client is currently not connected to the friend.")
	toxErrors[TOX_ERR_FRIEND_SEND_MESSAGE][TOX_ERR_FRIEND_SEND_MESSAGE_SENDQ] = errors.New("An allocation error occurred while increasing the send queue size.")
	toxErrors[TOX_ERR_FRIEND_SEND_MESSAGE][TOX_ERR_FRIEND_SEND_MESSAGE_TOO_LONG] = errors.New("Message length exceeded TOX_MAX_MESSAGE_LENGTH.")
	toxErrors[TOX_ERR_FRIEND_SEND_MESSAGE][TOX_ERR_FRIEND_SEND_MESSAGE_EMPTY] = errors.New("Attempted to send a zero-length message.")
	toxErrors[TOX_ERR_FILE_CONTROL][TOX_ERR_FILE_CONTROL_OK] = nil // The function returned successfully.
	toxErrors[TOX_ERR_FILE_CONTROL][TOX_ERR_FILE_CONTROL_FRIEND_NOT_FOUND] = errors.New("The friend_number passed did not designate a valid friend.")
	toxErrors[TOX_ERR_FILE_CONTROL][TOX_ERR_FILE_CONTROL_FRIEND_NOT_CONNECTED] = errors.New("This client is currently not connected to the friend.")
	toxErrors[TOX_ERR_FILE_CONTROL][TOX_ERR_FILE_CONTROL_NOT_FOUND] = errors.New("No file transfer with the given file number was found for the given friend.")
	toxErrors[TOX_ERR_FILE_CONTROL][TOX_ERR_FILE_CONTROL_NOT_PAUSED] = errors.New("A RESUME control was sent, but the file transfer is running normally.")
	toxErrors[TOX_ERR_FILE_CONTROL][TOX_ERR_FILE_CONTROL_DENIED] = errors.New("A RESUME control was sent, but the file transfer was paused by the other party. Only the party that paused the transfer can resume it.")
	toxErrors[TOX_ERR_FILE_CONTROL][TOX_ERR_FILE_CONTROL_ALREADY_PAUSED] = errors.New("A PAUSE control was sent, but the file transfer was already paused.")
	toxErrors[TOX_ERR_FILE_CONTROL][TOX_ERR_FILE_CONTROL_SENDQ] = errors.New("Packet queue is full.")
	toxErrors[TOX_ERR_FILE_SEEK][TOX_ERR_FILE_SEEK_OK] = nil // The function returned successfully.
	toxErrors[TOX_ERR_FILE_SEEK][TOX_ERR_FILE_SEEK_FRIEND_NOT_FOUND] = errors.New("The friend_number passed did not designate a valid friend.")
	toxErrors[TOX_ERR_FILE_SEEK][TOX_ERR_FILE_SEEK_FRIEND_NOT_CONNECTED] = errors.New("This client is currently not connected to the friend.")
	toxErrors[TOX_ERR_FILE_SEEK][TOX_ERR_FILE_SEEK_NOT_FOUND] = errors.New("No file transfer with the given file number was found for the given friend.")
	toxErrors[TOX_ERR_FILE_SEEK][TOX_ERR_FILE_SEEK_DENIED] = errors.New("File was not in a state where it could be seeked.")
	toxErrors[TOX_ERR_FILE_SEEK][TOX_ERR_FILE_SEEK_INVALID_POSITION] = errors.New("Seek position was invalid")
	toxErrors[TOX_ERR_FILE_SEEK][TOX_ERR_FILE_SEEK_SENDQ] = errors.New("Packet queue is full.")
	toxErrors[TOX_ERR_FILE_GET][TOX_ERR_FILE_GET_OK] = nil // The function returned successfully.
	toxErrors[TOX_ERR_FILE_GET][TOX_ERR_FILE_GET_NULL] = errors.New("One of the arguments to the function was NULL when it was not expected.")
	toxErrors[TOX_ERR_FILE_GET][TOX_ERR_FILE_GET_FRIEND_NOT_FOUND] = errors.New("The friend_number passed did not designate a valid friend.")
	toxErrors[TOX_ERR_FILE_GET][TOX_ERR_FILE_GET_NOT_FOUND] = errors.New("No file transfer with the given file number was found for the given friend.")
	toxErrors[TOX_ERR_FILE_SEND][TOX_ERR_FILE_SEND_OK] = nil // The function returned successfully.
	toxErrors[TOX_ERR_FILE_SEND][TOX_ERR_FILE_SEND_NULL] = errors.New("One of the arguments to the function was NULL when it was not expected.")
	toxErrors[TOX_ERR_FILE_SEND][TOX_ERR_FILE_SEND_FRIEND_NOT_FOUND] = errors.New("The friend_number passed did not designate a valid friend.")
	toxErrors[TOX_ERR_FILE_SEND][TOX_ERR_FILE_SEND_FRIEND_NOT_CONNECTED] = errors.New("This client is currently not connected to the friend.")
	toxErrors[TOX_ERR_FILE_SEND][TOX_ERR_FILE_SEND_NAME_TOO_LONG] = errors.New("Filename length exceeded TOX_MAX_FILENAME_LENGTH bytes.")
	toxErrors[TOX_ERR_FILE_SEND][TOX_ERR_FILE_SEND_TOO_MANY] = errors.New("Too many ongoing transfers. The maximum number of concurrent file transfers is 256 per friend per direction (sending and receiving).")
	toxErrors[TOX_ERR_FILE_SEND_CHUNK][TOX_ERR_FILE_SEND_CHUNK_OK] = nil // The function returned successfully.
	toxErrors[TOX_ERR_FILE_SEND_CHUNK][TOX_ERR_FILE_SEND_CHUNK_NULL] = errors.New("The length parameter was non-zero, but data was NULL.")
	toxErrors[TOX_ERR_FILE_SEND_CHUNK][TOX_ERR_FILE_SEND_CHUNK_FRIEND_NOT_FOUND] = errors.New("The friend_number passed did not designate a valid friend.")
	toxErrors[TOX_ERR_FILE_SEND_CHUNK][TOX_ERR_FILE_SEND_CHUNK_FRIEND_NOT_CONNECTED] = errors.New("This client is currently not connected to the friend.")
	toxErrors[TOX_ERR_FILE_SEND_CHUNK][TOX_ERR_FILE_SEND_CHUNK_NOT_FOUND] = errors.New("No file transfer with the given file number was found for the given friend.")
	toxErrors[TOX_ERR_FILE_SEND_CHUNK][TOX_ERR_FILE_SEND_CHUNK_NOT_TRANSFERRING] = errors.New("File transfer was found but isn't in a transferring state: (paused, done, broken, etc...) (happens only when not called from the request chunk callback).")
	toxErrors[TOX_ERR_FILE_SEND_CHUNK][TOX_ERR_FILE_SEND_CHUNK_INVALID_LENGTH] = errors.New("Attempted to send more or less data than requested. The requested data size is adjusted according to maximum transmission unit and the expected end of the file. Trying to send less or more than requested will return this error.")
	toxErrors[TOX_ERR_FILE_SEND_CHUNK][TOX_ERR_FILE_SEND_CHUNK_SENDQ] = errors.New("Packet queue is full.")
	toxErrors[TOX_ERR_FILE_SEND_CHUNK][TOX_ERR_FILE_SEND_CHUNK_WRONG_POSITION] = errors.New("Position parameter was wrong.")
	toxErrors[TOX_ERR_CONFERENCE_NEW][TOX_ERR_CONFERENCE_NEW_OK] = nil // The function returned successfully.
	toxErrors[TOX_ERR_CONFERENCE_NEW][TOX_ERR_CONFERENCE_NEW_INIT] = errors.New("The conference instance failed to initialize.")
	toxErrors[TOX_ERR_CONFERENCE_DELETE][TOX_ERR_CONFERENCE_DELETE_OK] = nil // The function returned successfully.
	toxErrors[TOX_ERR_CONFERENCE_DELETE][TOX_ERR_CONFERENCE_DELETE_CONFERENCE_NOT_FOUND] = errors.New("The conference number passed did not designate a valid conference.")
	toxErrors[TOX_ERR_CONFERENCE_PEER_QUERY][TOX_ERR_CONFERENCE_PEER_QUERY_OK] = nil // The function returned successfully.
	toxErrors[TOX_ERR_CONFERENCE_PEER_QUERY][TOX_ERR_CONFERENCE_PEER_QUERY_CONFERENCE_NOT_FOUND] = errors.New("The conference number passed did not designate a valid conference.")
	toxErrors[TOX_ERR_CONFERENCE_PEER_QUERY][TOX_ERR_CONFERENCE_PEER_QUERY_PEER_NOT_FOUND] = errors.New("The peer number passed did not designate a valid peer.")
	toxErrors[TOX_ERR_CONFERENCE_PEER_QUERY][TOX_ERR_CONFERENCE_PEER_QUERY_NO_CONNECTION] = errors.New("The client is not connected to the conference.")
	toxErrors[TOX_ERR_CONFERENCE_INVITE][TOX_ERR_CONFERENCE_INVITE_OK] = nil // The function returned successfully.
	toxErrors[TOX_ERR_CONFERENCE_INVITE][TOX_ERR_CONFERENCE_INVITE_CONFERENCE_NOT_FOUND] = errors.New("The conference number passed did not designate a valid conference.")
	toxErrors[TOX_ERR_CONFERENCE_INVITE][TOX_ERR_CONFERENCE_INVITE_FAIL_SEND] = errors.New("The invite packet failed to send.")
	toxErrors[TOX_ERR_CONFERENCE_JOIN][TOX_ERR_CONFERENCE_JOIN_OK] = nil // The function returned successfully.
	toxErrors[TOX_ERR_CONFERENCE_JOIN][TOX_ERR_CONFERENCE_JOIN_INVALID_LENGTH] = errors.New("The cookie passed has an invalid length.")
	toxErrors[TOX_ERR_CONFERENCE_JOIN][TOX_ERR_CONFERENCE_JOIN_WRONG_TYPE] = errors.New("The conference is not the expected type. This indicates an invalid cookie.")
	toxErrors[TOX_ERR_CONFERENCE_JOIN][TOX_ERR_CONFERENCE_JOIN_FRIEND_NOT_FOUND] = errors.New("The friend number passed does not designate a valid friend.")
	toxErrors[TOX_ERR_CONFERENCE_JOIN][TOX_ERR_CONFERENCE_JOIN_DUPLICATE] = errors.New("Client is already in this conference.")
	toxErrors[TOX_ERR_CONFERENCE_JOIN][TOX_ERR_CONFERENCE_JOIN_INIT_FAIL] = errors.New("Conference instance failed to initialize.")
	toxErrors[TOX_ERR_CONFERENCE_JOIN][TOX_ERR_CONFERENCE_JOIN_FAIL_SEND] = errors.New("The join packet failed to send.")
	toxErrors[TOX_ERR_CONFERENCE_SEND_MESSAGE][TOX_ERR_CONFERENCE_SEND_MESSAGE_OK] = nil // The function returned successfully.
	toxErrors[TOX_ERR_CONFERENCE_SEND_MESSAGE][TOX_ERR_CONFERENCE_SEND_MESSAGE_CONFERENCE_NOT_FOUND] = errors.New("The conference number passed did not designate a valid conference.")
	toxErrors[TOX_ERR_CONFERENCE_SEND_MESSAGE][TOX_ERR_CONFERENCE_SEND_MESSAGE_TOO_LONG] = errors.New("The message is too long.")
	toxErrors[TOX_ERR_CONFERENCE_SEND_MESSAGE][TOX_ERR_CONFERENCE_SEND_MESSAGE_NO_CONNECTION] = errors.New("The client is not connected to the conference.")
	toxErrors[TOX_ERR_CONFERENCE_SEND_MESSAGE][TOX_ERR_CONFERENCE_SEND_MESSAGE_FAIL_SEND] = errors.New("The message packet failed to send.")
	toxErrors[TOX_ERR_CONFERENCE_TITLE][TOX_ERR_CONFERENCE_TITLE_OK] = nil // The function returned successfully.
	toxErrors[TOX_ERR_CONFERENCE_TITLE][TOX_ERR_CONFERENCE_TITLE_CONFERENCE_NOT_FOUND] = errors.New("The conference number passed did not designate a valid conference.")
	toxErrors[TOX_ERR_CONFERENCE_TITLE][TOX_ERR_CONFERENCE_TITLE_INVALID_LENGTH] = errors.New("The title is too long or empty.")
	toxErrors[TOX_ERR_CONFERENCE_TITLE][TOX_ERR_CONFERENCE_TITLE_FAIL_SEND] = errors.New("The title packet failed to send.")
	toxErrors[TOX_ERR_CONFERENCE_GET_TYPE][TOX_ERR_CONFERENCE_GET_TYPE_OK] = nil // The function returned successfully.
	toxErrors[TOX_ERR_CONFERENCE_GET_TYPE][TOX_ERR_CONFERENCE_GET_TYPE_CONFERENCE_NOT_FOUND] = errors.New("The conference number passed did not designate a valid conference.")
	toxErrors[TOX_ERR_FRIEND_CUSTOM_PACKET][TOX_ERR_FRIEND_CUSTOM_PACKET_OK] = nil // The function returned successfully.
	toxErrors[TOX_ERR_FRIEND_CUSTOM_PACKET][TOX_ERR_FRIEND_CUSTOM_PACKET_NULL] = errors.New("One of the arguments to the function was NULL when it was not expected.")
	toxErrors[TOX_ERR_FRIEND_CUSTOM_PACKET][TOX_ERR_FRIEND_CUSTOM_PACKET_FRIEND_NOT_FOUND] = errors.New("The friend number did not designate a valid friend.")
	toxErrors[TOX_ERR_FRIEND_CUSTOM_PACKET][TOX_ERR_FRIEND_CUSTOM_PACKET_FRIEND_NOT_CONNECTED] = errors.New("This client is currently not connected to the friend.")
	toxErrors[TOX_ERR_FRIEND_CUSTOM_PACKET][TOX_ERR_FRIEND_CUSTOM_PACKET_INVALID] = errors.New("The first byte of data was not in the specified range for the packet type. This range is 200-254 for lossy, and 160-191 for lossless packets.")
	toxErrors[TOX_ERR_FRIEND_CUSTOM_PACKET][TOX_ERR_FRIEND_CUSTOM_PACKET_EMPTY] = errors.New("Attempted to send an empty packet.")
	toxErrors[TOX_ERR_FRIEND_CUSTOM_PACKET][TOX_ERR_FRIEND_CUSTOM_PACKET_TOO_LONG] = errors.New("Packet data length exceeded TOX_MAX_CUSTOM_PACKET_SIZE.")
	toxErrors[TOX_ERR_FRIEND_CUSTOM_PACKET][TOX_ERR_FRIEND_CUSTOM_PACKET_SENDQ] = errors.New("Packet queue is full.")
	toxErrors[TOX_ERR_GET_PORT][TOX_ERR_GET_PORT_OK] = nil // The function returned successfully.
	toxErrors[TOX_ERR_GET_PORT][TOX_ERR_GET_PORT_NOT_BOUND] = errors.New("The instance was not bound to any port.")
}
